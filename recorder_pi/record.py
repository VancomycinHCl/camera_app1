# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'record.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(445, 405)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_duration = QtWidgets.QLabel(self.centralwidget)
        self.label_duration.setGeometry(QtCore.QRect(20, 20, 131, 16))
        self.label_duration.setObjectName("label_duration")
        self.label_weight = QtWidgets.QLabel(self.centralwidget)
        self.label_weight.setGeometry(QtCore.QRect(240, 20, 48, 16))
        self.label_weight.setObjectName("label_weight")
        self.WeightBox = QtWidgets.QSpinBox(self.centralwidget)
        self.WeightBox.setGeometry(QtCore.QRect(310, 10, 81, 31))
        self.WeightBox.setMaximum(5000)
        self.WeightBox.setObjectName("WeightBox")
        self.label_height = QtWidgets.QLabel(self.centralwidget)
        self.label_height.setGeometry(QtCore.QRect(240, 60, 48, 16))
        self.label_height.setObjectName("label_height")
        self.HeightBox = QtWidgets.QSpinBox(self.centralwidget)
        self.HeightBox.setGeometry(QtCore.QRect(310, 55, 81, 31))
        self.HeightBox.setMaximum(5000)
        self.HeightBox.setObjectName("HeightBox")
        self.label_fps = QtWidgets.QLabel(self.centralwidget)
        self.label_fps.setGeometry(QtCore.QRect(20, 60, 72, 16))
        self.label_fps.setObjectName("label_fps")
        self.FPS = QtWidgets.QSpinBox(self.centralwidget)
        self.FPS.setGeometry(QtCore.QRect(150, 50, 71, 31))
        self.FPS.setMinimum(0)
        self.FPS.setMaximum(100)
        self.FPS.setObjectName("FPS")
        self.label_filepath = QtWidgets.QLabel(self.centralwidget)
        self.label_filepath.setGeometry(QtCore.QRect(20, 100, 141, 31))
        self.label_filepath.setObjectName("label_filepath")
        self.filePath_H264 = QtWidgets.QLineEdit(self.centralwidget)
        self.filePath_H264.setGeometry(QtCore.QRect(160, 98, 221, 31))
        self.filePath_H264.setText("")
        self.filePath_H264.setMaxLength(32767)
        self.filePath_H264.setFrame(True)
        self.filePath_H264.setDragEnabled(False)
        self.filePath_H264.setReadOnly(False)
        self.filePath_H264.setClearButtonEnabled(False)
        self.filePath_H264.setObjectName("filePath_H264")
        self.pushButton_Apply = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Apply.setGeometry(QtCore.QRect(210, 320, 211, 28))
        self.pushButton_Apply.setObjectName("pushButton_Apply")
        self.pushButton_Preview = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Preview.setGeometry(QtCore.QRect(210, 280, 211, 28))
        self.pushButton_Preview.setObjectName("pushButton_Preview")
        self.pushButton_recordImme = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_recordImme.setGeometry(QtCore.QRect(10, 280, 191, 28))
        self.pushButton_recordImme.setObjectName("pushButton_recordImme")
        self.checkBox_launchPreview = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_launchPreview.setGeometry(QtCore.QRect(20, 224, 351, 19))
        self.checkBox_launchPreview.setObjectName("checkBox_launchPreview")
        self.timeEdit_duration = QtWidgets.QTimeEdit(self.centralwidget)
        self.timeEdit_duration.setGeometry(QtCore.QRect(150, 12, 71, 31))
        self.timeEdit_duration.setTime(QtCore.QTime(0, 20, 0))
        self.timeEdit_duration.setObjectName("timeEdit_duration")
        self.pushButton_H264File = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_H264File.setGeometry(QtCore.QRect(390, 100, 41, 31))
        self.pushButton_H264File.setObjectName("pushButton_H264File")
        self.label_filepath_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_filepath_2.setGeometry(QtCore.QRect(20, 152, 131, 31))
        self.label_filepath_2.setObjectName("label_filepath_2")
        self.pushButton_MP4File = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_MP4File.setGeometry(QtCore.QRect(390, 150, 41, 31))
        self.pushButton_MP4File.setObjectName("pushButton_MP4File")
        self.filePath_MP4 = QtWidgets.QLineEdit(self.centralwidget)
        self.filePath_MP4.setGeometry(QtCore.QRect(150, 150, 231, 31))
        self.filePath_MP4.setText("")
        self.filePath_MP4.setMaxLength(32767)
        self.filePath_MP4.setFrame(True)
        self.filePath_MP4.setDragEnabled(False)
        self.filePath_MP4.setReadOnly(False)
        self.filePath_MP4.setClearButtonEnabled(False)
        self.filePath_MP4.setObjectName("filePath_MP4")
        self.checkBox_autoConvert = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_autoConvert.setGeometry(QtCore.QRect(20, 200, 381, 19))
        self.checkBox_autoConvert.setCheckable(True)
        self.checkBox_autoConvert.setChecked(False)
        self.checkBox_autoConvert.setTristate(False)
        self.checkBox_autoConvert.setObjectName("checkBox_autoConvert")
        self.checkBox_recoedEachHour = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_recoedEachHour.setGeometry(QtCore.QRect(20, 250, 241, 19))
        self.checkBox_recoedEachHour.setObjectName("checkBox_recoedEachHour")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 320, 191, 28))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 445, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_Recording = QtWidgets.QAction(MainWindow)
        self.actionOpen_Recording.setObjectName("actionOpen_Recording")
        self.actionOpen_Setting_File = QtWidgets.QAction(MainWindow)
        self.actionOpen_Setting_File.setObjectName("actionOpen_Setting_File")
        self.actionSave_Settings = QtWidgets.QAction(MainWindow)
        self.actionSave_Settings.setObjectName("actionSave_Settings")
        self.menuFile.addAction(self.actionOpen_Recording)
        self.menuFile.addAction(self.actionOpen_Setting_File)
        self.menuFile.addAction(self.actionSave_Settings)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        self.pushButton_Apply.clicked.connect(MainWindow.applySettings)
        self.pushButton_Preview.clicked.connect(MainWindow.previewImme)
        self.pushButton_H264File.clicked.connect(MainWindow.openOutputH264File)
        self.pushButton_recordImme.clicked.connect(MainWindow.recordImme)
        self.pushButton_MP4File.clicked.connect(MainWindow.openOutputMP4File)
        self.pushButton.clicked.connect(MainWindow.openOutputFolder)
        self.checkBox_recoedEachHour.clicked.connect(MainWindow.recordEachHour_disableImmeButton)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.HeightBox, self.WeightBox)
        MainWindow.setTabOrder(self.WeightBox, self.pushButton_Preview)
        MainWindow.setTabOrder(self.pushButton_Preview, self.filePath_H264)
        MainWindow.setTabOrder(self.filePath_H264, self.FPS)
        MainWindow.setTabOrder(self.FPS, self.pushButton_Apply)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Brief Video Controller"))
        self.label_duration.setText(_translate("MainWindow", "Video Duration"))
        self.label_weight.setText(_translate("MainWindow", "Weight"))
        self.label_height.setText(_translate("MainWindow", "Height"))
        self.label_fps.setText(_translate("MainWindow", "Framerate"))
        self.label_filepath.setText(_translate("MainWindow", "H.264 Output Path"))
        self.pushButton_Apply.setText(_translate("MainWindow", "Apply Settings"))
        self.pushButton_Preview.setText(_translate("MainWindow", "Preview"))
        self.pushButton_recordImme.setText(_translate("MainWindow", "Record Immediately"))
        self.checkBox_launchPreview.setText(_translate("MainWindow", "Launch Preview In Recording"))
        self.pushButton_H264File.setText(_translate("MainWindow", "..."))
        self.label_filepath_2.setText(_translate("MainWindow", "MP4 Output Path"))
        self.pushButton_MP4File.setText(_translate("MainWindow", "..."))
        self.checkBox_autoConvert.setText(_translate("MainWindow", "Convrt Videos Automatically After Recording"))
        self.checkBox_recoedEachHour.setText(_translate("MainWindow", "Recording each hour"))
        self.pushButton.setText(_translate("MainWindow", "Open Output Folder"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionOpen_Recording.setText(_translate("MainWindow", "Open Recording"))
        self.actionOpen_Setting_File.setText(_translate("MainWindow", "Open Settings"))
        self.actionSave_Settings.setText(_translate("MainWindow", "Save Settings"))
